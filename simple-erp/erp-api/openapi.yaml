---
openapi: 3.0.3
info:
  title: REST API for study ERP system
  contact:
    name: Integrity Vision LLC
    url: https://integrity.com.ua
    email: vivanchenko@integrity.com.ua
  version: "1.0"
servers:
- url: /erp
paths:
  /api/rest/equipment:
    get:
      parameters:
      - name: type
        in: query
        schema:
          format: int64
          type: integer
      - name: withDecommissioned
        in: query
        schema:
          default: "false"
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EquipmentDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentDto'
  /api/rest/equipment/maintenance:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaintenanceDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceDto'
  /api/rest/equipment/maintenance/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Return maintenance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceDto'
        "404":
          description: Maintenance not exist
  /api/rest/equipment/maintenance/{id}/consumption-rate:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumptionRateDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceDto'
  /api/rest/equipment/maintenance/{id}/consumption-rate/{rateId}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: rateId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceDto'
  /api/rest/equipment/supply-rate:
    get:
      parameters:
      - name: type
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplyRateDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyRateDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyRateDto'
  /api/rest/equipment/supply-rate/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Return supply rate data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyRateDto'
        "404":
          description: Supply rate not exist
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyRateDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyRateDto'
  /api/rest/equipment/type:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EquipmentTypeDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentTypeDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentTypeDto'
  /api/rest/equipment/type/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Return equipment type data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentTypeDto'
        "404":
          description: Equipment type not exist
  /api/rest/equipment/type/{id}/consumption-rate:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumptionRateDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentTypeDto'
  /api/rest/equipment/type/{id}/consumption-rate/{rateId}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: rateId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentTypeDto'
  /api/rest/equipment/type/{id}/maintenance:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentTypeDto'
  /api/rest/equipment/type/{id}/maintenance/{maintenanceId}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: maintenanceId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentTypeDto'
  /api/rest/equipment/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Return equipment data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentDto'
        "404":
          description: Equipment not exist
  /api/rest/equipment/{id}/assign:
    patch:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentAssigningRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentDto'
  /api/rest/equipment/{id}/commission:
    patch:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentCommissioningRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentDto'
  /api/rest/equipment/{id}/decommission:
    patch:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentCommissioningRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentDto'
  /api/rest/equipment/{id}/retrieve:
    patch:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentDto'
  /api/rest/material:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialDto'
  /api/rest/material/batch:
    get:
      parameters:
      - name: material
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchOfMaterialDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchOfMaterialDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOfMaterialDto'
  /api/rest/material/batch/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Return batch data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOfMaterialDto'
        "404":
          description: Batch not exist
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
    patch:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchWriteOffRequestDto'
      responses:
        "204":
          description: No Content
  /api/rest/material/consumption-rate:
    get:
      parameters:
      - name: material
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsumptionRateDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumptionRateDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumptionRateDto'
  /api/rest/material/consumption-rate/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Return consumption rate data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumptionRateDto'
        "404":
          description: Consumption rate not exist
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumptionRateDto'
      responses:
        "204":
          description: No Content
  /api/rest/org-structure/employee:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
  /api/rest/org-structure/employee/login/{login}:
    get:
      parameters:
      - name: login
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Return employee data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
        "404":
          description: Employee not exist
  /api/rest/org-structure/employee/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Return employee data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
        "404":
          description: Employee not exist
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDto'
      responses:
        "204":
          description: No Content
  /api/rest/org-structure/position:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionDto'
  /api/rest/org-structure/position/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Return position data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionDto'
        "404":
          description: Position not exist
  /api/rest/org-structure/position/{id}/supply-rate:
    patch:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyRateDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionDto'
  /api/rest/org-structure/position/{id}/supply-rate/{rateId}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: rateId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionDto'
  /api/rest/org-structure/unit:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrgUnitDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgUnitDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUnitDto'
  /api/rest/org-structure/unit/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Return unit data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUnitDto'
        "404":
          description: Unit not exist
  /api/rest/org-structure/vacation:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VacationDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacationDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacationDto'
  /api/rest/org-structure/vacation/{id}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
  /api/rest/trips:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TripDto'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripDto'
components:
  schemas:
    BatchOfMaterialDto:
      required:
      - material
      - purchaseDate
      - purchaseAmount
      - price
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        material:
          allOf:
          - $ref: '#/components/schemas/MaterialDto'
          - nullable: false
        purchaseDate:
          format: date
          type: string
          xml:
            name: purchase-date
          nullable: false
        purchaseAmount:
          type: number
          xml:
            name: purchase-amount
          nullable: false
        price:
          type: number
          nullable: false
        remainingAmount:
          type: number
          xml:
            name: remaining-amount
      xml:
        name: batch-of-material
    BatchWriteOffRequestDto:
      required:
      - batchId
      - amount
      type: object
      properties:
        batchId:
          format: int64
          type: integer
          xml:
            name: batch-id
            attribute: true
          nullable: false
        amount:
          pattern: \S
          type: string
          xml:
            attribute: true
          nullable: false
      xml:
        name: write-off-request
    ConsumptionRateDto:
      required:
      - title
      - material
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        title:
          pattern: \S
          type: string
          nullable: false
        material:
          allOf:
          - $ref: '#/components/schemas/MaterialDto'
          - nullable: false
        durationUnit:
          type: object
          xml:
            name: duration-unit
        durationAmount:
          format: int64
          type: integer
          xml:
            name: duration-amount
        amount:
          type: number
      xml:
        name: consumption-rate
    EmployeeDto:
      required:
      - login
      - firstName
      - lastName
      - birthDate
      - hireDate
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        login:
          pattern: \S
          type: string
          nullable: false
        firstName:
          pattern: \S
          type: string
          xml:
            name: first-name
          nullable: false
        lastName:
          pattern: \S
          type: string
          xml:
            name: last-name
          nullable: false
        birthDate:
          format: date
          type: string
          xml:
            name: birth-date
          nullable: false
        hireDate:
          format: date
          type: string
          xml:
            name: hire-date
          nullable: false
        fireDate:
          format: date
          type: string
          xml:
            name: fire-date
        position:
          format: int64
          type: integer
      xml:
        name: employee
    EquipmentAssigningRequest:
      required:
      - serialNumber
      - employeeId
      type: object
      properties:
        serialNumber:
          pattern: \S
          type: string
          xml:
            name: serial-number
          nullable: false
        employeeId:
          format: int64
          type: integer
          xml:
            name: employee-id
          nullable: false
      xml:
        name: equipment-assign-request
    EquipmentCommissioningRequest:
      required:
      - serialNumber
      - date
      type: object
      properties:
        serialNumber:
          pattern: \S
          type: string
          xml:
            name: serial-number
          nullable: false
        date:
          pattern: yyyy-MM-dd
          type: string
          nullable: false
      xml:
        name: equipment-commissioning-request
    EquipmentDto:
      required:
      - serialNumber
      - type
      - purchasePrice
      type: object
      properties:
        serialNumber:
          pattern: \S
          type: string
          xml:
            name: serial-number
          nullable: false
        type:
          format: int64
          type: integer
          nullable: false
        purchasePrice:
          type: number
          xml:
            name: purchase-price
          nullable: false
        balancePrice:
          type: number
          xml:
            name: balance-price
        commissioningDate:
          format: date
          type: string
          xml:
            name: commissioning-date
        decommissioningDate:
          format: date
          type: string
          xml:
            name: decommissioning-date
        user:
          format: int64
          type: integer
      xml:
        name: equipment
    EquipmentTypeDto:
      required:
      - title
      - lifeTimeInMonth
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        title:
          pattern: \S
          type: string
          nullable: false
        description:
          type: string
        lifeTimeInMonth:
          format: int32
          type: integer
          xml:
            name: life-time
          nullable: false
        maintenanceSet:
          uniqueItems: true
          type: array
          items:
            format: int64
            type: integer
            xml:
              name: maintenance-id
          xml:
            name: maintenance-set
            wrapped: true
        consumptionRates:
          uniqueItems: true
          type: array
          items:
            format: int64
            type: integer
            xml:
              name: rate-id
          xml:
            name: consumption-rates
            wrapped: true
      xml:
        name: equipment-type
    MaintenanceDto:
      required:
      - title
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        title:
          pattern: \S
          type: string
          nullable: false
        consumptionRates:
          uniqueItems: true
          type: array
          items:
            format: int64
            type: integer
            xml:
              name: rate-id
          xml:
            name: consumption-rates
            wrapped: true
      xml:
        name: maintenance
    MaterialDto:
      required:
      - title
      - measureUnit
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        title:
          pattern: \S
          type: string
          nullable: false
        measureUnit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnit'
          - xml:
              name: measure-unit
            nullable: false
      xml:
        name: material
    MeasureUnit:
      enum:
      - METER
      - SQUARE_METER
      - KILOGRAMME
      - LITER
      - PCS
      - PKG
      type: string
    OrgUnitDto:
      required:
      - title
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        title:
          pattern: \S
          type: string
          nullable: false
        ascendant:
          format: int64
          type: integer
          xml:
            name: ascendant-unit
        descendants:
          type: array
          items:
            format: int64
            type: integer
            xml:
              name: unit
          xml:
            name: descendant-units
            wrapped: true
        positions:
          type: array
          items:
            format: int64
            type: integer
            xml:
              name: position
          xml:
            wrapped: true
      xml:
        name: unit
    PositionDto:
      required:
      - title
      - index
      - orgUnit
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        title:
          pattern: \S
          type: string
          nullable: false
        index:
          format: int32
          type: integer
          nullable: false
        orgUnit:
          format: int64
          type: integer
          xml:
            name: unit
          nullable: false
        employee:
          format: int64
          type: integer
        supplyRates:
          type: array
          items:
            format: int64
            type: integer
            xml:
              name: rate
          xml:
            name: supply-rates
            wrapped: true
      xml:
        name: position
    SupplyRateDto:
      required:
      - title
      - equipmentType
      - amount
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        title:
          pattern: \S
          type: string
          nullable: false
        equipmentType:
          format: int64
          type: integer
          xml:
            name: equipment-type
          nullable: false
        amount:
          format: int32
          type: integer
          nullable: false
      xml:
        name: supply-rate
    TripDto:
      required:
      - employee
      - startDate
      - duration
      - type
      - departureCity
      - arrivalCity
      - subject
      - totalCost
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        employee:
          format: int64
          type: integer
          nullable: false
        startDate:
          format: date
          type: string
          xml:
            name: start-date
          nullable: false
        duration:
          format: int32
          type: integer
          nullable: false
        type:
          allOf:
          - $ref: '#/components/schemas/TripType'
          - nullable: false
        departureCountry:
          type: string
        departureCity:
          pattern: \S
          type: string
          nullable: false
        arrivalCountry:
          type: string
        arrivalCity:
          pattern: \S
          type: string
          nullable: false
        subject:
          pattern: \S
          type: string
          nullable: false
        totalCost:
          pattern: \S
          type: string
          nullable: false
      xml:
        name: trip
    TripType:
      enum:
      - INTERNAL
      - FOREIGN
      type: string
    VacationDto:
      required:
      - employee
      - startDate
      - duration
      - type
      type: object
      properties:
        id:
          format: int64
          type: integer
          xml:
            attribute: true
        employee:
          format: int64
          type: integer
          nullable: false
        startDate:
          format: date
          type: string
          xml:
            name: start-date
          nullable: false
        duration:
          format: int32
          type: integer
          nullable: false
        type:
          allOf:
          - $ref: '#/components/schemas/VacationType'
          - nullable: false
      xml:
        name: vacation
    VacationType:
      enum:
      - ANNUALLY
      - ADDITIONAL
      - AT_OWN_EXPENSE
      - FOR_FAMILY_REASONS
      type: string
